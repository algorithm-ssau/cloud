import socket

serv_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, proto=0)
serv_sock.bind(('', 53210))
serv_sock.listen(10)

while True:
    # Бесконечно обрабатываем входящие подключения
    client_sock, client_addr = serv_sock.accept()
    print('Connected by', client_addr)

    while True:
        # Пока клиент не отключился, читаем передаваемые
        # им данные и отправляем их обратно
        data = client_sock.recv(1024)
        if not data:
            # Клиент отключился
            break
        client_sock.sendall(data)

    client_sock.close()







    КЛИЕНТ

    import socket

    client_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    client_sock.connect(('127.0.0.1', 53210))
    client_sock.sendall(b'Hello, world')
    data = client_sock.recv(1024)
    client_sock.close()
    print('Received', repr(data))

    ДЛЯ HTTP
    import socket
    import sys

    class MyHTTPServer:
      def __init__(self, host, port, server_name):
        self._host = host
        self._port = port
        self._server_name = server_name

      def serve_forever(self):
        serv_sock = socket.socket(
          socket.AF_INET,
          socket.SOCK_STREAM,
          proto=0)

        try:
          serv_sock.bind((self._host, self._port))
          serv_sock.listen()

          while True:
            conn, _ = serv_sock.accept()
            try:
              self.serve_client(conn)
            except Exception as e:
              print('Client serving failed', e)
        finally:
          serv_sock.close()

      def serve_client(self, conn):
        try:
          req = self.parse_request(conn)
          resp = self.handle_request(req)
          self.send_response(conn, resp)
        except ConnectionResetError:
          conn = None
        except Exception as e:
          self.send_error(conn, e)

        if conn:
          conn.close()

      def parse_request(self, conn):
        pass  # TODO: implement me

      def handle_request(self, req):
        pass  # TODO: implement me

      def send_response(self, conn, resp):
        pass  # TODO: implement me

      def send_error(self, conn, err):
        pass  # TODO: implement me


    if __name__ == '__main__':
      host = sys.argv[1]
      port = int(sys.argv[2])
      name = sys.argv[3]

      serv = MyHTTPServer(host, port, name)
      try:
        serv.serve_forever()
      except KeyboardInterrupt:
        pass